server:
  port: 8080
  compression:
    enabled: true
    min-response-size: 1

spring:
  datasource:
    url: 'jdbc:mysql://localhost:3306/book_library?useSSL=false'
    username: root
    password: 123456

  data:
    mongodb:
      uri: mongodb://longvh:123456@127.0.0.1:27017/book_library

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: false

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true

  cloud:
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers:
            - localhost:9092
      bindings:
        user-topic-input:
          binder: kafka
          destination: user-topic
          contentType: text/json
          group: user-input-group-1
        user-topic-output:
          binder: kafka
          destination: user-topic
          contentType: text/json
          group: user-output-group-1

  cache:
    type: redis
  redis:
    pool:
      max-active: 2500
      max-wait: 6000
      max-idle: 500
      min-idle: 100
      testOnBorrow: true
      blockWhenExhausted: true
      numTestsPerEvictionRun: 3
      timeBetweenEvictionRunsMillis: -1
    database: 0
    password: 1q2w3e4r
    timeout: 1000
    sentinel:
      master: redis-master
      nodes:
        - redis-sentinel:26379

management:
  endpoints:
    web:
      exposure:
        include:
          - info
          - httptrace
async:
  thread:
    pool:
      core-size: 2
      max-size: 5
      queue-capacity: 100

security:
  jwt:
    header: Authorization
    prefix: Bearer
    expiration: 86400000
    secret: ^$JwtSecretKey@
