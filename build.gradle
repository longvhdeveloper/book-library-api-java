plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'idea'
    id 'jacoco'
}

group = 'vn.vlong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'commons-validator:commons-validator:1.6'
    implementation 'org.apache.commons:commons-lang3:3.9'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.5.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testCompile('org.mockito:mockito-core:3.2.4')
    testCompile('org.mockito:mockito-junit-jupiter:3.2.4')
}

jacocoTestReport {
    group = "Reporting"
    reports {
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/reports/coverage")
    }
}

checkstyle {
    toolVersion = '8.28'
}

test {
    useJUnitPlatform()
}
