<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>book-library-api</artifactId>
  <build>
    <plugins>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <groupId>org.springframework.boot</groupId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <dependencies>
          <dependency>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <groupId>org.junit.platform</groupId>
            <version>1.3.2</version>
          </dependency>
          <dependency>
            <artifactId>junit-jupiter-engine</artifactId>
            <groupId>org.junit.jupiter</groupId>
            <version>5.5.2</version>
          </dependency>
        </dependencies>
        <groupId>org.apache.maven.plugins</groupId>
        <version>2.22.2</version>
      </plugin>


      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
            <phase>prepare-package</phase>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>

        <version>0.8.5</version>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <configLocation>config/checkstyle/checkstyle.xml</configLocation>
              <consoleOutput>true</consoleOutput>
              <encoding>UTF-8</encoding>
              <failsOnError>true</failsOnError>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>validate</id>
            <phase>validate</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0</version>
      </plugin>

      <plugin>
        <artifactId>apt-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <outputDirectory>target/generated-sources/java</outputDirectory>
              <processor>
                org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor
              </processor>
            </configuration>
            <goals>
              <goal>process</goal>
            </goals>
          </execution>
        </executions>
        <groupId>com.mysema.maven</groupId>
        <version>1.1.3</version>
      </plugin>

      <!-- jmeter -->
      <plugin>
        <artifactId>jmeter-maven-plugin</artifactId>
        <configuration>
          <propertiesUser>
            <jmeter.save.saveservice.bytes>true</jmeter.save.saveservice.bytes>
            <jmeter.save.saveservice.label>true</jmeter.save.saveservice.label>
            <jmeter.save.saveservice.latency>true</jmeter.save.saveservice.latency>
            <jmeter.save.saveservice.output_format>csv</jmeter.save.saveservice.output_format>
            <jmeter.save.saveservice.response_code>true</jmeter.save.saveservice.response_code>
            <jmeter.save.saveservice.response_message>true
            </jmeter.save.saveservice.response_message>
            <jmeter.save.saveservice.successful>true</jmeter.save.saveservice.successful>
            <jmeter.save.saveservice.thread_counts>true</jmeter.save.saveservice.thread_counts>
            <jmeter.save.saveservice.thread_name>true</jmeter.save.saveservice.thread_name>
            <jmeter.save.saveservice.time>true</jmeter.save.saveservice.time>
            <threadgroup.count>2</threadgroup.count>
            <threadgroup.duration>5</threadgroup.duration>
            <threadgroup.rampup>2</threadgroup.rampup>
          </propertiesUser>
          <testResultsTimestamp>false</testResultsTimestamp>
        </configuration>
        <executions>
          <!-- Generate JMeter configuration -->
          <execution>
            <goals>
              <goal>configure</goal>
            </goals>
            <id>configuration</id>
          </execution>
          <!-- Run JMeter tests -->
          <execution>
            <configuration>
              <generateReports>true</generateReports>
            </configuration>
            <goals>
              <goal>jmeter</goal>
            </goals>
            <id>jmeter-tests</id>
            <phase>verify</phase>
          </execution>
          <!-- Fail build on errors in test -->
          <execution>
            <goals>
              <goal>results</goal>
            </goals>
            <id>jmeter-check-results</id>
          </execution>
        </executions>
        <groupId>com.lazerycode.jmeter</groupId>
        <version>3.0.0</version>
      </plugin>
      <!-- spotify's dockerfile-maven-plugin -->
      <plugin>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <configuration>
          <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
          <!--          <registryUrl>https://index.docker.io:443/v1/</registryUrl>-->
          <repository>
            https://hub.docker.com/repository/docker/${docker.image.prefix}/${project.artifactId}
          </repository>
          <!--          <serverId>index.docker.io</serverId>-->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <id>default</id>
            <phase>install</phase>
          </execution>
        </executions>
        <groupId>com.spotify</groupId>
        <version>1.4.13</version>
      </plugin>
      <!-- maven-dependency-plugin useful for creating docker image -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <artifactId>${project.artifactId}</artifactId>
                  <groupId>${project.groupId}</groupId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
            <goals>
              <goal>unpack</goal>
            </goals>
            <id>unpack</id>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-boot-starter-tomcat</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-aop</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-stream</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <version>3.0.1.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-stream-kafka</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <version>3.0.1.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-redis</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-devtools</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>mysql-connector-java</artifactId>
      <groupId>mysql</groupId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <artifactId>jackson-databind</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
      <version>2.10.1</version>
    </dependency>
    <dependency>
      <artifactId>commons-validator</artifactId>
      <groupId>commons-validator</groupId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <artifactId>commons-lang3</artifactId>
      <groupId>org.apache.commons</groupId>
      <version>3.9</version>
    </dependency>
    <dependency>
      <artifactId>querydsl-mongodb</artifactId>
      <groupId>com.querydsl</groupId>
      <version>4.2.1</version>
    </dependency>
    <dependency>
      <artifactId>querydsl-apt</artifactId>
      <groupId>com.querydsl</groupId>
      <version>4.2.1</version>
    </dependency>
    <dependency>
      <artifactId>jjwt</artifactId>
      <groupId>io.jsonwebtoken</groupId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <artifactId>javafaker</artifactId>
      <groupId>com.github.javafaker</groupId>
      <version>1.0.1</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>junit-vintage-engine</artifactId>
          <groupId>org.junit.vintage</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>spring-security-test</artifactId>
      <groupId>org.springframework.security</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-api</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.5.2</version>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-params</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.5.2</version>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.5.2</version>
    </dependency>
    <dependency>
      <artifactId>mockito-core</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>3.2.4</version>
    </dependency>
    <dependency>
      <artifactId>mockito-junit-jupiter</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>3.2.4</version>
    </dependency>

  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <artifactId>spring-boot-dependencies</artifactId>
        <groupId>org.springframework.boot</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>2.2.2.RELEASE</version>
      </dependency>
      <dependency>
        <artifactId>spring-cloud-stream-dependencies</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>Horsham.RELEASE</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <description>This is Pet Project Book Library API</description>
  <groupId>vn.vlong</groupId>
  <modelVersion>4.0.0</modelVersion>

  <name>Book Library API</name>

  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/>
    <version>2.2.2.RELEASE</version> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <docker.image.prefix>longvo</docker.image.prefix>
    <java.version>1.8</java.version>
    <maven.deploy.skip>true</maven.deploy.skip>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>http://repo.spring.io/libs-milestone</url>
    </repository>
  </repositories>

  <version>0.0.1-SNAPSHOT</version>

</project>